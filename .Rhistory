scale_color_manual (name="Sites",
labels=c("Indian Cr.", "Vermillion Cr."),
values=c("red","darkblue")) +
labs(x = "", y = "Nitrate NO3 (mg L^-1")
theme(
# LABLES APPEARANCE
axis.title.x=element_text(size=12, face="bold"),
axis.title.y=element_text(size=12, face="bold"),
axis.text.x = element_text(size=10, face="bold", angle=45, hjust=1),
axis.text.y = element_text(size=10, face="bold"),
# plot.title = element_text(hjust = 0.5, colour="black", size=22, face="bold"),
# LEGEND
# legend.position="none",
# LEGEND TEXT
legend.text = element_text(colour="black", size = 12, face = "bold"),
# LEGEND TITLE
legend.title = element_text(colour="black", size=14, face="bold"),
# LEGEND POSITION AND JUSTIFICATION
# legend.justification=c(0.1,1),
# legend.position=c(0.02,.99),
# PLOT COLORS
# REMOVE BOX BEHIND LEGEND SYMBOLS
# REMOVE LEGEND BOX
legend.key = element_rect(fill = "transparent", colour = "transparent"),
# REMOVE LEGEND BOX
legend.background = element_rect(fill = "transparent", colour = "transparent"),
# #REMOVE PLOT FILL AND GRIDS
# panel.background=element_rect(fill = "transparent", colour = "transparent"),
# # removes the window background
# plot.background=element_rect(fill="transparent",colour=NA),
# # removes the grid lines
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# ADD AXES LINES AND SIZE
axis.line.x = element_line(color="black", size = 0.3),
axis.line.y = element_line(color="black", size = 0.3),
# ADD PLOT BOX
panel.border = element_rect(colour = "black", fill=NA, size=0.3))
ggplot(streams.df, aes(datetime, no3_mgl, color=site)) +
geom_point() +
scale_y_continuous()+ #expand=c(0,0), breaks=c(0,30,60)
scale_x_datetime(date_breaks = "1 month",
limits = ymd_hms(c('2017-01-01 00:00:00','2017-12-31 00:00:00')),
labels=date_format("%Y-%b-%d"), expand=c(0,0)) +
scale_color_manual (name="Sites",
labels=c("Indian Cr.", "Vermillion Cr."),
values=c("red","darkblue")) +
labs(x = "", y = "Nitrate NO3 (mg L^-1")+
theme(
# LABLES APPEARANCE
axis.title.x=element_text(size=12, face="bold"),
axis.title.y=element_text(size=12, face="bold"),
axis.text.x = element_text(size=10, face="bold", angle=45, hjust=1),
axis.text.y = element_text(size=10, face="bold"),
# plot.title = element_text(hjust = 0.5, colour="black", size=22, face="bold"),
# LEGEND
# legend.position="none",
# LEGEND TEXT
legend.text = element_text(colour="black", size = 12, face = "bold"),
# LEGEND TITLE
legend.title = element_text(colour="black", size=14, face="bold"),
# LEGEND POSITION AND JUSTIFICATION
# legend.justification=c(0.1,1),
# legend.position=c(0.02,.99),
# PLOT COLORS
# REMOVE BOX BEHIND LEGEND SYMBOLS
# REMOVE LEGEND BOX
legend.key = element_rect(fill = "transparent", colour = "transparent"),
# REMOVE LEGEND BOX
legend.background = element_rect(fill = "transparent", colour = "transparent"),
# #REMOVE PLOT FILL AND GRIDS
# panel.background=element_rect(fill = "transparent", colour = "transparent"),
# # removes the window background
# plot.background=element_rect(fill="transparent",colour=NA),
# # removes the grid lines
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# ADD AXES LINES AND SIZE
axis.line.x = element_line(color="black", size = 0.3),
axis.line.y = element_line(color="black", size = 0.3),
# ADD PLOT BOX
panel.border = element_rect(colour = "black", fill=NA, size=0.3))
ggplot(streams.df, aes(datetime, no3_mgl, color=site)) +
geom_point() +
scale_y_continuous()+ #expand=c(0,0), breaks=c(0,30,60)
scale_x_datetime(date_breaks = "1 month",
limits = ymd_hms(c('2017-01-01 00:00:00','2017-12-31 00:00:00')),
labels=date_format("%Y-%b-%d"), expand=c(0,0)) +
scale_color_manual (name="Sites",
labels=c("Indian Cr.", "Vermillion Cr."),
values=c("red","darkblue")) +
labs(x = "", y = "Nitrate NO3 (mg L^-1") +
theme(
# LABLES APPEARANCE
axis.title.x=element_text(size=12, face="bold"),
axis.title.y=element_text(size=12, face="bold"),
axis.text.x = element_text(size=10, face="bold", angle=45, hjust=1),
axis.text.y = element_text(size=10, face="bold"),
# plot.title = element_text(hjust = 0.5, colour="black", size=22, face="bold"),
# LEGEND
# legend.position="none",
# LEGEND TEXT
legend.text = element_text(colour="black", size = 12, face = "bold"),
# LEGEND TITLE
legend.title = element_text(colour="black", size=14, face="bold"),
# LEGEND POSITION AND JUSTIFICATION
# legend.justification=c(0.1,1),
# legend.position=c(0.02,.99),
# PLOT COLORS
# REMOVE BOX BEHIND LEGEND SYMBOLS
# REMOVE LEGEND BOX
legend.key = element_rect(fill = "transparent", colour = "transparent"),
# REMOVE LEGEND BOX
legend.background = element_rect(fill = "transparent", colour = "transparent"),
# #REMOVE PLOT FILL AND GRIDS
# panel.background=element_rect(fill = "transparent", colour = "transparent"),
# # removes the window background
# plot.background=element_rect(fill="transparent",colour=NA),
# # removes the grid lines
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# ADD AXES LINES AND SIZE
axis.line.x = element_line(color="black", size = 0.3),
axis.line.y = element_line(color="black", size = 0.3),
# ADD PLOT BOX
panel.border = element_rect(colour = "black", fill=NA, size=0.3))
# One new package for summary stats
#install.packages("psych")
# load the libraries each time you restart R
library(tidyverse)
library(lubridate)
library(scales)
library(skimr)
# read in the file
iris.df <- read_csv("data/iris.csv")
glimpse(iris.df)
# One new package for summary stats
#install.packages("psych")
# load the libraries each time you restart R
library(tidyverse)
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)
library(lubridate)
library(reshape2)
library(scales)
library(psych)
# this is the code to set the working directory on a mac
# this will vary on a pc depending on the operating system
# setwd("~/Desktop/nzstats")
# to write the webpage and getit to work I have to use a slightly different workign directory
setwd("~/Documents/GitHub R Code/2017stats")
# first get rid of the totals colum
nzpop_mf.df <- nzpop.df %>% select(-(total))
#Hitograms with GGPLOT
ggplot(data=iris.df, aes(iris.df$Sepal.Length)) +
geom_histogram(col="blue", fill="blue", alpha=.7) +
labs (title="Sepal Length")+
labs (x="Sepal Length", y="Count")
#Hitograms with GGPLOT
ggplot(data=iris.df, aes(iris.df$Sepal.Length)) +
geom_histogram(col="blue", fill="blue", alpha=.7) +
labs (title="Sepal Length", x="Sepal Length", y="Count")
#Hitograms with GGPLOT
ggplot(data=iris.df, aes(iris.df$Sepal.Length)) +
geom_histogram(col="blue", fill="blue", alpha=.7, binwidth = 2) +
labs (title="Sepal Length", x="Sepal Length", y="Count")
#Hitograms with GGPLOT
ggplot(data=iris.df, aes(iris.df$Sepal.Length)) +
geom_histogram(col="blue", fill="blue", alpha=.7, binwidth = 5) +
labs (title="Sepal Length", x="Sepal Length", y="Count")
#Hitograms with GGPLOT
ggplot(data=iris.df, aes(iris.df$Sepal.Length)) +
geom_histogram(col="blue", fill="blue", alpha=.7, binwidth = 1) +
labs (title="Sepal Length", x="Sepal Length", y="Count")
#Hitograms with GGPLOT
ggplot(data=iris.df, aes(iris.df$Sepal.Length)) +
geom_histogram() +
labs (title="Sepal Length", x="Sepal Length", y="Count")
###What if you want to look at all of the species separately
ggplot(data=iris.df, aes(iris.df$Sepal.Length)) +
geom_histogram(binwidth = .1,  col="blue", fill="blue", alpha=.7) +
labs (title="Sepal Length", x="Sepal Length", y="Count") +
facet_wrap(~Species, scales = "free") # allows the scales to be free and you can comment this out to see what happens
###What if you want to look at all of the species separately
ggplot(data=iris.df, aes(iris.df$Sepal.Length)) +
geom_histogram(binwidth = .2,  col="blue", fill="blue", alpha=.7) +
labs (title="Sepal Length", x="Sepal Length", y="Count") +
facet_wrap(~Species, scales = "free") # allows the scales to be free and you can comment this out to see what happens
###What if you want to look at all of the species separately
ggplot(data=iris.df, aes(iris.df$Sepal.Length)) +
geom_histogram(binwidth = .5,  col="blue", fill="blue", alpha=.7) +
labs (title="Sepal Length", x="Sepal Length", y="Count") +
facet_wrap(~Species, scales = "free") # allows the scales to be free and you can comment this out to see what happens
ggplot(data=iris.df, aes(x= Species, y=Sepal.Length)) +
geom_dotplot(binwidth=0.1, col="blue", fill="blue", alpha=.7, stackdir = "center", binaxis = "y") +
labs (title="Sepal Length", x="Sepal Length", y="Count")
# Box and Whisker plots with limits ####
ggplot(iris.df, aes(x = Species, y = Sepal.Length))+
geom_boxplot()
ggplot(data=iris.df, aes(x= Species, y=Sepal.Length)) +
geom_violin(col="blue", fill="blue", alpha=.7, stackdir = "center", binaxis = "y") +
labs (title="Sepal Length")+
labs (x="Sepal Length", y="Count")
install.packages(c("rgdal", "withr", "xts"))
violin.plot <- ggplot(data=iris.df, aes(x= Species, y=Sepal.Length)) +
geom_violin(col="blue", fill="blue", alpha=.7, stackdir = "center", binaxis = "y") +
labs (title="Sepal Length")+
labs (x="Sepal Length", y="Count")
violin.plot
#Save the file with sizes
ggsave("figures/violin.plot.tiff",plot=violin.plot, width=6, height=6, dpi = 300)
violin.plot <- ggplot(data=iris.df, aes(x= Species, y=Sepal.Length)) +
geom_violin(col="blue", fill="blue", alpha=.7) +
labs (title="Sepal Length")+
labs (x="Sepal Length", y="Count")
violin.plot
#Save the file with sizes
ggsave("figures/violin.plot.tiff",plot=violin.plot, width=6, height=6, dpi = 300)
View(iris.df)
ggplot(iris.df) +
geom_point(aes(species, Sepal.length))
ggplot(iris.df) +
geom_point(aes(Species, Sepal.length))
ggplot(iris.df) +
geom_point(aes(Species, Sepal.Length))
ggplot(iris.df) +
geom_point(aes(Species, Sepal.Length)) +
geom_point(aes(Species, Sepal.Width))
ggplot(iris.df) +
geom_point(aes(Species, Sepal.Length), color="blue") +
geom_point(aes(Species, Sepal.Width), color="red")
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red")
ggplot(iris.df, aes(Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red")
ggplot(iris.df, aes(Species)) +
geom_point(aes(Sepal.Length))
ggplot(iris.df, aes(x=Species)) +
geom_point(aes(y=Sepal.Length))
ggplot(iris.df, aes(x=Species)) +
geom_point(aes(y=Sepal.Length), color="blue") +
geom_point(aes(y=Sepal.Width), color="red")
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red")
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red") +
stat_summary(aes(y=Sepal.Wength), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="blue")
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red") +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="blue")
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red") +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_se, geom = "errorbar", color="red") +
stat_summary(aes(y=Sepal.Width),fun.data = mean_se, geom = "errorbar" color="blue")
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red") +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_se, geom = "errorbar", color="red") +
stat_summary(aes(y=Sepal.Width),fun.data = mean_se, geom = "errorbar", color="blue")
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red") +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_se, geom = "errorbar", color="red", width=1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_se, geom = "errorbar", color="blue", width=1)
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red") +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_se, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_se, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red") +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_se, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_se, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red") +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red", position = "dodge") +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1, position = "dodge") +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red", position = position_dodge(width = 0.9)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1, position = position_dodge(width = 0.9)) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red", position = position_dodge(width = 2)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1, position = position_dodge(width = 2)) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red", position = position_dodge(width = 2)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1, position = position_dodge(width = 12)) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red", position = position_dodge(width = 2)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1, position = "dodge" +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red", position = position_dodge(width = 2)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1, position = "dodge") +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red", position = position_dodge(width = 0.8)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1, position = "dodge") +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red", position = position_dodge(width = 0.8)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red", position = position_dodge(width = 0.8)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=as.factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red", fill="red", position = position_dodge(width = 0.8)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=as.factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red",
fill="red", position = position_dodge(width = 12)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=as.factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red",
fill="red", position = position_dodge(width = 1)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=as.factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red",
fill="red", position = position_dodge(width = 2)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=as.factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red",
fill="red", position = position_dodge(width = 3)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=as.factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red",
fill="red", position = position_dodge(width = .3)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=as.factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red",
fill="red", position = position_dodge(width = 1)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=as.factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red",
fill="red", position = position_dodge(width = .9)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue", fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=as.factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red",
fill="red", position = position_dodge(width = .9)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue",
fill="blue", position = position_dodge(width = .5)) +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=.1) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=.1)
ggplot(iris.df, aes(x=as.factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red",
fill="red", position=position_nudge(x = 0.1, y = 0)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue",
fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=0.1,
, position=position_nudge(x = 0.1, y = 0)) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=0.1)
ggplot(iris.df, aes(x=as.factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red",
fill="red", position=position_nudge(x = 0.12, y = 0)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue",
fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=0.1,
, position=position_nudge(x = 0.12, y = 0)) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=0.1)
ggplot(iris.df, aes(x=as.factor(Species)))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red",
fill="red", position=position_nudge(x = 0.12, y = 0)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue",
fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=0.1,
position=position_nudge(x = 0.12, y = 0)) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=0.1)
ggplot(iris.df, aes(x=Species))+
stat_summary(aes(y=Sepal.Length), fun.y=mean, geom='point', shape=23, size=3, color="red",
fill="red", position=position_nudge(x = 0.12, y = 0)) +
stat_summary(aes(y=Sepal.Width), fun.y=mean, geom='point', shape=23, size=3, color="blue",
fill="blue") +
stat_summary(aes(y=Sepal.Length), fun.data = mean_sdl, geom = "errorbar", color="red", width=0.1,
position=position_nudge(x = 0.12, y = 0)) +
stat_summary(aes(y=Sepal.Width),fun.data = mean_sdl, geom = "errorbar", color="blue", width=0.1)
# One new package for summary stats
#install.packages("psych")
# load the libraries each time you restart R
library(tidyverse)
library(lubridate)
library(scales)
library(skimr)
# read in the file
iris.df <- read_csv("data/iris.csv")
glimpse(iris.df)
library(janitor)
iris2.df <- iris.df %>% clean_names()
View(iris2.df)
iris.df %>%
gglplot(aes(y=Sepal.Width)) +
geom_histogram()
iris.df %>%
ggplot(aes(y=Sepal.Width)) +
geom_histogram()
iris.df %>%
ggplot(aes(y=Sepal.Width)) +
geom_histogram(stat = "bin")
iris.df %>%
ggplot(aes(Sepal.Width)) +
geom_histogram(stat = "bin")
iris.df %>%
ggplot(aes(Sepal.Width)) +
geom_histogram()
iris.df <- read_csv("data/iris.csv") %>% clean_names()
# remove_empty_rows() %>% # removes empty rows if they are thee
# remove_empty_cols() # removes the empty column is they are there
iris.df <- read_csv("data/iris.csv") %>% clean_names()
# remove_empty_rows() %>% # removes empty rows if they are thee
# remove_empty_cols() # removes the empty column is they are there
glimpse(iris.df)
petal_width.df <- select(iris.df, Species, petal_width)
petal_width.df <- select(iris.df, c(Species, petal_width))
petal_width.df <- select(df=iris.df, Species, petal_width)
petal_width.df <- select(df=iris.df, species, petal_width)
petal_width.df <- select(df=iris.df, species, petal_width)
petal_width.df <- iris.df %>% select(species, petal_width)
petal_width.df <- select(iris.df (species, petal_width))
petal_width.df <- select(df=iris.df (species, petal_width))
petal_width.df <- select(iris.df, (species, petal_width))
petal_width.df <- select(iris.df, species, petal_width)
petal.df <- iris.df %>% select(species, starts_with("petal")
petal.df <- iris.df %>% select(species, species, starts_with("petal")
petal.df <- iris.df %>% select(species, species, starts_with("petal"))
View(petal.df)
install.packages(c("klaR", "LearnBayes", "rgdal", "xts"))
rmd2rscript(02_ggplot.Rmd)
rmd2rscript("02_ggplot.Rmd")
#' ## script for converting .Rmd files to .R scripts.
#' #### Kevin Keenan 2014
#'
#' This function will read a standard R markdown source file and convert it to
#' an R script to allow the code to be run using the "source" function.
#'
#' The function is quite simplisting in that it reads a .Rmd file and adds
#' comments to non-r code sections, while leaving R code without comments
#' so that the interpreter can run the commands.
#'
#'
rmd2rscript <- function(infile){
# read the file
flIn <- readLines(infile)
# identify the start of code blocks
cdStrt <- which(grepl(flIn, pattern = "```{r*", perl = TRUE))
# identify the end of code blocks
cdEnd <- sapply(cdStrt, function(x){
preidx <- which(grepl(flIn[-(1:x)], pattern = "```", perl = TRUE))[1]
return(preidx + x)
})
# define an expansion function
# strip code block indacators
flIn[c(cdStrt, cdEnd)] <- ""
expFun <- function(strt, End){
strt <- strt+1
End <- End-1
return(strt:End)
}
idx <- unlist(mapply(FUN = expFun, strt = cdStrt, End = cdEnd,
SIMPLIFY = FALSE))
# add comments to all lines except code blocks
comIdx <- 1:length(flIn)
comIdx <- comIdx[-idx]
for(i in comIdx){
flIn[i] <- paste("#' ", flIn[i], sep = "")
}
# create an output file
nm <- strsplit(infile, split = "\\.")[[1]][1]
flOut <- file(paste(nm, "[rmd2r].R", sep = ""), "w")
for(i in 1:length(flIn)){
cat(flIn[i], "\n", file = flOut, sep = "\t")
}
close(flOut)
}
rmd2rscript(02_ggplot.Rmd)
rmd2rscript("02_ggplot.Rmd")
